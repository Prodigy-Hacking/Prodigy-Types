export interface GameData {
	ad: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { prefabID: number; priority: number; name: string; expiryDate: null; sendDate: null; startDate: null; assets: string[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { priority: number; uiID: number; dateTextName: string; expiryDate: string; name: string; sendDate: string; startDate: string; assets: string[]; buttons: { showOnStartDate: boolean; method: string; name: string; parameters: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { uiID: number; dateTextName: string; expiryDate: string; name: string; sendDate: null; startDate: null; assets: string[]; buttons: { showOnStartDate: boolean; method: string; name: string; parameters: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { priority: number; uiID: number; dateTextName: string; expiryDate: string; name: string; sendDate: string; startDate: string; assets: string[]; buttons: { showOnStartDate: boolean; method: string; name: string; parameters: unknown /* too deep */; }[]; testLanes: number[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { priority: number; uiID: number; expiryDate: string; name: string; sendDate: string; startDate: string; assets: string[]; buttons: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { priority: number; uiID: number; expiryDate: string; name: string; sendDate: string; startDate: string; assets: string[]; buttons: { showOnStartDate: boolean; method: string; name: string; parameters: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { priority: number; uiID: number; experimentTrackEvent: string; expiryDate: string; name: string; sendDate: string; startDate: string; assets: string[]; buttons: { showOnStartDate: boolean; method: string; name: string; parameters: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { prefabID: number; priority: number; name: string; expiryDate: null; sendDate: null; assets: string[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { memberSuppression: boolean; priority: number; uiID: number; expiryDate: string; name: string; sendDate: string; startDate: string; assets: string[]; buttons: ({ showOnStartDate: boolean; method: string; name: string; parameters: unknown /* too deep */; } | { method: string; name: string; })[]; }; metadata: {}; })[];
	affix: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { opType: number; value: number; label: string; name: string; type: string; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { amount: number; opType: number; value: number; valuePercent: number; label: string; name: string; type: string; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { amount: number; operationType: number; version: number; name: string; type: string; }; metadata: {}; })[];
	atlas: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; }; metadata: { assets: { default: { v: number; }; }; }; })[];
	bgm: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; }; metadata: { assets: { default: { v: number; }; }; }; })[];
	bitmapFont: { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { assets: { default: { v: number; }; }; }; }[];
	boots: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; effects: number[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; rarity: number; flavorText: string; name: string; effects: number[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; "": string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: string[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { 0: number; drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; "en-us": string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { vIcon: number; }; })[];
	boss: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: {}; metadata: { assets: { type: string; default: { h: number; v: number; w: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: {}; metadata: { type: string; assets: { default: { h: number; v: number; w: number; x: number; type: string; hitbox: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: {}; metadata: { type: string; assets: { default: { v: number; filename: string; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: {}; metadata: { type: string; assets: { default: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { battleCheckpointID: number; element: string; name: string; nameKey: string; adventureRewards: { ID: number; type: string; }[]; battle: { damageModifier: number; difficulty: number; hpModifier: number; hpStat: number; phaseHPThresholdPercentage: number; powerStat: number; undergroundDamageMultiplier: number; rockAttacks: number[]; wyrmAttacks: number[]; }; rockShuffle: { 2: { delay: unknown /* too deep */; shuffleCount: unknown /* too deep */; timeElapsed: unknown /* too deep */; }; 3: { delay: unknown /* too deep */; shuffleCount: unknown /* too deep */; timeElapsed: unknown /* too deep */; }; }; }; metadata: { type: string; assets: { default: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { battleCheckpointID: number; element: string; name: string; nameKey: string; adventureRewards: { ID: number; type: string; }[]; battle: { castDelay: number; difficulty: number; health: number; hpStat: number; attacks: { fire: unknown /* too deep */; ice: unknown /* too deep */; plant: unknown /* too deep */; shadow: unknown /* too deep */; storm: unknown /* too deep */; water: unknown /* too deep */; }; }; creatureModifiers: { damage: number; }; }; metadata: { assets: { default: { v: number; type: string; hitbox: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { battleCheckpointID: number; element: string; name: string; nameKey: string; adventureRewards: { ID: number; type: string; }[]; battle: { castDelay: number; difficulty: number; health: number; hpStat: number; spiderAttacks: number[]; yetiAttacks: number[]; }; spiderBattle: { catch: boolean; scale: boolean; targetingEnabled: boolean; walkIntoBattle: boolean; minTeamSize: number; adventureRewards: unknown /* too deep */[]; pets: unknown /* too deep */[]; }; tree: { hpStat: number; breakThresholds: number[]; creature: { element: string; }; }; }; metadata: { assets: { default: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { battleCheckpointID: number; element: string; name: string; nameKey: string; adventureRewards: { ID: number; type: string; }[]; battle: { castDelay: number; difficulty: number; health: number; hpStat: number; attacks: number[]; }; creatureModifiers: { damage: number; }; }; metadata: { assets: { default: { v: number; type: string; hitbox: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { battleCheckpointID: number; element: string; name: string; nameKey: string; adventureRewards: { ID: number; type: string; }[]; battle: { battleShy: boolean; castDelay: number; difficulty: number; health: number; hpStat: number; attacks: number[]; }; creatureModifiers: { damage: number; }; wizard: { appearance: { eyeColor: number; face: number; skinColor: number; gender: string; hair: unknown /* too deep */; }; equipment: { hat: number; outfit: number; spellRelic: number; weapon: number; }; }; }; metadata: { assets: { default: { hitbox: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { healthStat: number; lootTableID: number; missCooldown: number; powerStat: number; relicRingReward: number; starReward: number; element: string; name: string; nameKey: string; affixIDs: number[]; spells: number[]; }; metadata: { assets: { default: { ID: number; v: number; type: string; hitbox: unknown /* too deep */; }; }; }; })[];
	bountyName: { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; templateType: string; value: string; requiredPetIDs: number[]; }; metadata: {}; }[];
	bundle: { assetID: number; gender: number; ID: number; name: string; type: string; data: { isPurchaseable: boolean; price: number; flavorText: string; name: string; items: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; }; }[];
	currency: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; modifier: number; price: number; flavorText: string; icon: string; name: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; modifier: number; price: number; flavorText: string; icon: string; name: string; namePlural: string; zone: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; modifier: number; price: number; flavorText: string; icon: string; name: string; zone: string; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; modifier: number; price: number; flavorText: string; name: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; modifier: number; price: number; flavorText: string; icon: string; name: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; modifier: number; price: number; flavorText: string; icon: string; name: string; zone: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; modifier: number; price: number; flavorText: string; name: string; zone: string; icon: null; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; modifier: number; price: number; flavorText: string; icon: string; name: string; cost: { ID: number; N: number; type: string; }; }; metadata: { vIcon: number; }; })[];
	dailyReward: { assetID: number; gender: number; ID: number; name: string; type: string; data: { resetDayIndex: number; name: string; days: { numRequiredQuestions: number; rewards: unknown /* too deep */; }[]; }; metadata: {}; }[];
	dialogue: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { textKey: string; audio: { d: number; s: number; tag: string; }; avatar: { animationMod: string; atlas: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { nameKey: string; textKey: string; audio: { d: number; s: number; tag: string; }; avatar: { animationMod: string; atlas: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { textKey: string; audio: {}; avatar: { animationMod: string; atlas: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { textKey: string; audio: {}; avatar: { animationMod: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { nameKKey: string; textKey: string; audio: { d: number; s: number; tag: string; }; avatar: { animationMod: string; atlas: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { textKey: string; audio: { d: number; s: number; tag: string; }; avatar: { animationMod: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; textKey: string; audio: { d: number; s: number; tag: string; }; avatar: { animationMod: string; atlas: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; nameKey: string; textKey: string; audio: { d: number; s: number; tag: string; }; avatar: { animationMod: number; atlas: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; nameKey: string; textKey: string; audio: { tag: string; }; avatar: { animationMod: number; atlas: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; nameKey: string; textKey: string; audio: { d: number; s: number; tag: string; }; avatar: { atlas: string; frameName: string; animationMod: null; spineAttachment: null; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; nameKey: string; textKey: string; audio: { d: number; s: number; tag: string; }; avatar: { animationMod: string; atlas: string; frameName: string; spineAttachment: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; nameKey: string; textKey: string; audio: { d: number; s: number; tag: string; }; avatar: { dimmed: boolean; animationMod: string; atlas: string; frameName: string; spineAttachment: string; }; }; metadata: {}; })[];
	dorm: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; flavorText: string; name: string; }; metadata: { vIcon: number; type: string; assets: { horizontal: { v: number; type: string; }; vertical: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; flavorText: string; name: string; }; metadata: { vIcon: number; type: string; assets: { vertical: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; flavorText: string; name: string; }; metadata: { v: number; vIcon: number; type: string; assets: { horizontal: { v: number; type: string; }; sheets: { v: number; type: string; }; vertical: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; flavorText: string; name: string; }; metadata: { vIcon: number; iconAtlas: string; type: string; assets: { vertical: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { v: number; vIcon: number; type: string; assets: { vertical: { animated: boolean; v: number; type: string; anchor: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { vertical: { animated: boolean; v: number; type: string; anchor: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { horizontal: { v: number; type: string; anchor: unknown /* too deep */; }; vertical: { animated: boolean; v: number; type: string; anchor: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { horizontal: { v: number; type: string; }; vertical: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { vertical: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; r: number; rarity: number; category: string; "en-us": string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { horizontal: { v: number; type: string; }; vertical: { v: number; type: string; }; }; }; })[];
	dormbg: { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; x: number; y: number; category: string; flavorText: string; name: string; tag: string; }; metadata: { vIcon: number; }; }[];
	dungeon: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { battleDifficulty: number; goldenPages: number; gridHeight: number; gridWidth: number; maxCritPathLength: number; maxEncounters: number; maxPages: number; minCritPathLength: number; minEncounters: number; minPages: number; version: number; name: string; seed: null; endRoom: { fsmId: number; tileMap: string; }; extraPaths: { maxLength: number; maxPaths: number; minLength: number; minPaths: number; }; monsterDrops: { ID: number; N: number; type: string; }[]; monsterIDs: number[]; monsterRooms: { fsmId: number; tileMap: string; }[]; normalRooms: { fsmId: number; tileMap: string; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { battleDifficulty: number; goldenPages: number; gridHeight: number; gridWidth: number; maxCritPathLength: number; maxEncounters: number; maxPages: number; minCritPathLength: number; minEncounters: number; minPages: number; version: number; name: string; seed: null; endRoom: { fsmId: number; tileMap: string; }; extraPaths: { maxLength: number; maxPaths: number; minLength: number; minPaths: number; }; monsterDrops: { ID: number; N: number; type: string; }[]; monsterIDs: number[]; monsterRooms: { fsmId: number; tileMap: string; }[]; monsterWeights: number[]; normalRooms: { fsmId: number; tileMap: string; }[]; }; metadata: {}; })[];
	emote: { assetID: number; gender: number; ID: number; name: string; type: string; data: { isAnimated: number; name: string; }; metadata: { v: number; vIcon: number; type: string; assets: { default: { v: number; type: string; offSet: unknown /* too deep */; }; }; }; }[];
	eyeColor: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; flavorText: string; name: string; colors: number[][]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; flavorText: string; name: string; colors: number[][]; }; metadata: { v: number; vIcon: number; type: string; }; })[];
	face: { assetID: number; gender: number; ID: number; name: string; type: string; data: { price: number; flavorText: string; name: string; }; metadata: { v: number; vIcon: number; type: string; }; }[];
	faceColor: { assetID: number; gender: number; ID: number; name: string; type: string; data: { price: number; colors: number[][]; }; metadata: {}; }[];
	featureRequirement: ({ ID: number; name: string; data: { requirements: { level: number; }[]; }; } | { ID: number; name: string; data: { requirements: { items: unknown /* too deep */; }[]; }; } | { ID: number; name: string; data: { requirements: ({ friends: number; } | { classmates: number; })[]; }; } | { ID: number; name: string; data: { requirements: { accountCreationDate: unknown /* too deep */; }[]; }; } | { ID: number; name: string; data: { requirements: ({ level: number; } | { accountCreationDate: unknown /* too deep */; })[]; }; })[];
	follow: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; }; metadata: { v: number; vIcon: number; type: string; assets: { default: { type: string; }; prefab: { ID: number; type: string; hitbox: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; }; metadata: { v: number; vIcon: number; type: string; assets: { default: { type: string; }; prefab: { ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { customPrice: number; member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; spriteOffsets: { body: { x: number; y: number; }; tail: { x: number; y: number; }; }; }; metadata: { v: number; vIcon: number; icon: string; type: string; assets: { default: { type: string; }; prefab: { ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { customPrice: number; member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; }; metadata: { v: number; vIcon: number; icon: string; type: string; assets: { default: { type: string; }; prefab: { ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { customPrice: number; member: number; numWalkAnimFrames: number; price: number; rarity: number; flavorText: string; name: string; tag: string; }; metadata: { v: number; vIcon: number; icon: string; type: string; assets: { default: { type: string; }; prefab: { ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { customPrice: number; member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; spriteOffsets: { legs: { x: number; y: number; }; }; }; metadata: { v: number; vIcon: number; icon: string; type: string; assets: { default: { type: string; }; prefab: { ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { customPrice: number; member: number; numStandAnimFrames: number; price: number; rarity: number; flavorText: string; name: string; tag: string; }; metadata: { v: number; vIcon: number; icon: string; type: string; assets: { default: { type: string; }; prefab: { ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; }; metadata: { v: number; vIcon: number; icon: string; type: string; assets: { default: { type: string; }; prefab: { ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { price: number; rarity: number; flavorText: string; name: string; }; metadata: { petID: number; v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; particleEffects: { ID: number; x: number; y: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { ID: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; particleEffects: { inFront: boolean; ID: number; x: number; y: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { ID: number; anchor: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; }; metadata: { vIcon: number; type: string; assets: { default: { ID: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { ID: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; anchor: { x: number; y: number; }; assets: { default: { ID: number; anchor: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { ID: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { noCache: boolean; ID: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; anchor: { x: number; y: number; }; assets: { default: { ID: number; v: number; type: string; anchor: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; "en-us": string; flavorText: string; name: string; tag: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { ID: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; tag: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { ID: number; v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { ID: number; type: string; }; }; }; })[];
	fontStyle: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { smoothed: boolean; blendMode: number; fontSize: number; fill: string; font: string; fontWeight: string; padding: { x: number; y: number; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { smoothed: boolean; fontSize: number; fill: string; font: string; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { smoothed: boolean; fontSize: number; shadowBlur: number; shadowDistance: number; strokeThickness: number; fill: string; font: string; shadowColor: string; stroke: string; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { smoothed: boolean; blendMode: number; fontSize: number; shadowBlur: number; shadowDistance: number; strokeThickness: number; fill: string; font: string; fontWeight: string; name: string; shadowColor: string; stroke: string; padding: { x: number; y: number; }; }; metadata: {}; })[];
	fossil: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { count: number; price: number; rarity: number; flavorText: string; name: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { price: number; rarity: number; flavorText: string; name: string; recipe: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; }; })[];
	fsm: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: { name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: { actions: unknown /* too deep */; transitions: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; names: string; states: ({ actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { actions: unknown /* too deep */; transitions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; } | { actions: unknown /* too deep */; } | { actions: unknown /* too deep */; transitions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ actions: unknown /* too deep */; } | { actions: unknown /* too deep */; transitions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; states: ({ actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: { name: string; actions: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: { actions: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; } | { actions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ actions: unknown /* too deep */; } | { actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ actions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ actions: unknown /* too deep */; } | { actions: unknown /* too deep */; transitions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ name: string; actions: unknown /* too deep */; } | { actions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; states: ({ name: string; actions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { version: number; name: string; states: ({ name: string; actions: unknown /* too deep */; } | { name: string; actions: unknown /* too deep */; transitions: unknown /* too deep */; })[]; }; metadata: {}; })[];
	gameFeed: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { autoShare: boolean; category: string; eventAction: string; feedText: string; icon: string; key: string; modal: { action: string; body: string; title: string; }; notification: { friend: string; self: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { autoShare: boolean; category: string; eventAction: string; feedText: string; icon: string; key: string; modal: { action: string; body: string; title: string; }; notification: { friend: string; self: string; }; }; metadata: { equals: { storeID: number[]; type: string[]; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { autoShare: boolean; category: string; eventAction: string; feedText: string; icon: string; key: string; metaData: {}; modal: { action: string; body: string; title: string; }; notification: { friend: string; self: string; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { autoShare: boolean; category: string; eventAction: string; feedText: string; icon: string; key: string; metaData: { equals: { type: unknown /* too deep */; }; }; modal: { action: string; body: string; title: string; }; notification: { friend: string; self: string; }; }; metadata: {}; })[];
	gender: { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; flavorText: string; name: string; saveDataID: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { v: number; vIcon: number; type: string; }; }[];
	generic: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; sections: { easyPath: { maxEncountersPerRoom: number; roomCount: number; mapPoolName: string; objects: unknown /* too deep */; }; end: { maxEncountersPerRoom: number; roomCount: number; mapPoolName: string; objects: unknown /* too deep */; }; hardPath: { maxEncountersPerRoom: number; roomCount: number; mapPoolName: string; objects: unknown /* too deep */; }; start: { maxEncountersPerRoom: number; roomCount: number; mapPoolName: string; objects: unknown /* too deep */; }; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; groups: { end: number[]; middle: number[]; start: number[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { bountyDurationSeconds: number; name: string; bountyPetIDs: number[]; tiers: { 1: { member: unknown /* too deep */; nonMember: unknown /* too deep */; }; 2: { member: unknown /* too deep */; nonMember: unknown /* too deep */; }; 3: { member: unknown /* too deep */; nonMember: unknown /* too deep */; }; 4: { member: unknown /* too deep */; nonMember: unknown /* too deep */; }; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { bountyElementAlignmentChance: number; name: string; monsterPoolPetIDs: number[]; tiers: { 1: { easy: unknown /* too deep */; hard: unknown /* too deep */; medium: unknown /* too deep */; }; 2: { easy: unknown /* too deep */; hard: unknown /* too deep */; medium: unknown /* too deep */; }; 3: { easy: unknown /* too deep */; hard: unknown /* too deep */; medium: unknown /* too deep */; }; 4: { easy: unknown /* too deep */; hard: unknown /* too deep */; medium: unknown /* too deep */; }; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { maxEnergy: number; minPlayerHeartsOnEndBattle: number; spellTierCount: number; name: string; allOutAttackBossDamage: { 1: { 1: number; 2: number; 3: number; }; 2: { 1: number; 2: number; 3: number; }; }; allOutAttackDamage: { 1: { 1: number; 2: number; 3: number; }; 2: { 1: number; 2: number; 3: number; }; }; difficultySwitchChances: number[]; elementalAdvantages: { astral: string[]; earth: string[]; fire: string[]; ice: string[]; mech: string[]; plant: string[]; shadow: string[]; storm: string[]; water: string[]; wizard: string[]; }; elementalDisadvantages: { earth: string[]; fire: string[]; ice: string[]; mech: string[]; plant: string[]; shadow: string[]; storm: string[]; water: string[]; }; teams: { limit: { max: number; min: number; }; units: { max: number; min: number; }; }; unitLevel: { max: number; min: number; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; aoe: { level: number; spellID: number; }[]; singleShot: { level: number; spellID: number; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { maxTier: number; name: string; tiers: { 1: { guardianId: number; }; 2: { guardianId: number; }; 3: { guardianId: number; }; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; dialogueIDs: number[]; }; metadata: {}; })[];
	giftBox: { assetID: number; gender: number; ID: number; name: string; type: string; data: { isPurchaseable: boolean; questions: number; name: string; items: never[]; }; metadata: { vIcon: number; }; }[];
	hair: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; flavorText: string; name: string; }; metadata: { v: number; vIcon: number; x: number; y: number; type: string; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; name: string; }; metadata: { v: number; vIcon: number; x: number; y: number; type: string; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; flavorText: string; name: string; }; metadata: { noCache: boolean; v: number; vIcon: number; x: number; y: number; type: string; pivot: { x: number; y: number; }; }; })[];
	hairColor: { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; flavorText: string; name: string; colors: number[][]; }; metadata: { v: number; vIcon: number; type: string; }; }[];
	hat: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: never[]; }; metadata: { v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; memberAd: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; memberAd: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; memberAd: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; assetVersions: { id: string; }[]; hairHide: number[]; iconVersions: { id: string; }[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; assetVersions: { id: string; }[]; hairHide: number[]; iconVersions: { id: string; }[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effects: number[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: never[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: string[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: string[]; }; metadata: { v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: string[]; }; metadata: { hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: string[]; }; metadata: { noCache: boolean; hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { noCache: boolean; v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { noCache: boolean; hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: never[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; "en-us": string; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { noCache: boolean; v: number; vIcon: number; x: number; y: number; hideReplace: string; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; "en-us": string; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { noCache: boolean; hideReplace: number; v: number; vIcon: number; x: number; y: number; type: string; hairHide: number[]; pivot: { x: number; y: number; }; }; })[];
	item: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { healAmount: number; member: number; price: number; rarity: number; flavorText: string; name: string; target: string; type: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; type: string; effect: { fx: string; }; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; effectDescription: string; flavorText: string; name: string; target: string; type: string; affix: { highPotency: boolean; amount: number; type: string; elements: string[]; }; }; metadata: { vIcon: number; icon: string; assets: { icon: { ID: number; frame: string; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; effectDescription: string; flavorText: string; name: string; target: string; type: string; affix: { highPotency: boolean; amount: number; type: string; elements: string[]; }; }; metadata: { vIcon: number; assets: { icon: { ID: number; frame: string; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; effectDescription: string; flavorText: string; name: string; target: string; type: string; affix: { highPotency: boolean; amount: number; type: string; }; }; metadata: { vIcon: number; assets: { icon: { ID: number; frame: string; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; potency: number; price: number; rarity: number; element: string; flavorText: string; name: string; subType: string; type: string; effect: null; }; metadata: { vIcon: number; icon: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; effectDescription: string; flavorText: string; name: string; target: string; type: string; affix: { highPotency: boolean; amount: number; type: string; elements: string[]; }; cost: { ID: number; N: number; type: string; }[]; }; metadata: { v: number; vIcon: number; icon: string; type: string; assets: { icon: { ID: number; frame: string; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; potency: number; price: number; rarity: number; element: string; flavorText: string; name: string; subType: string; type: string; cost: { ID: number; N: number; type: string; }[]; effect: { ID: number; time: number; transform: string; }; }; metadata: { v: number; vIcon: number; icon: string; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; potency: number; price: number; rarity: number; element: string; flavorText: string; name: string; subType: string; type: string; cost: { ID: number; N: number; type: string; }[]; effect: { ID: number; time: number; transform: string; }; }; metadata: { v: number; vIcon: number; icon: string; type: string; assets: { morphedApperance: { ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; potency: number; price: number; rarity: number; element: string; flavorText: string; name: string; subType: string; type: string; cost: { ID: number; N: number; type: string; }[]; effect: { ID: number; time: number; transform: string; }; }; metadata: { vIcon: number; icon: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; potency: number; price: number; rarity: number; element: string; flavorText: string; name: string; subType: string; type: string; cost: { ID: number; N: number; type: string; }[]; effect: { ID: number; time: number; transform: string; }; }; metadata: { vIcon: number; icon: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; potency: number; price: number; rarity: number; element: string; flavorText: string; name: string; subType: string; type: string; effect: null; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; icon: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effect: { fx: string; }; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { healAmount: number; member: number; potency: number; price: number; rarity: number; element: string; flavorText: string; name: string; subType: string; target: string; type: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; icon: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; effect: { fx: string; }; }; metadata: { vIcon: number; icon: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { healAmount: number; member: number; price: number; rarity: number; flavorText: string; name: string; target: string; type: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; icon: string; }; })[];
	itemTable: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; fallback: { ID: number; quantity: number; type: string; }; items: { ID: number; quantity: number; weight: number; type: string; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; fallback: { quantity: number; type: string; }; items: { ID: number; quantity: number; weight: number; type: string; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; fallback: { quantity: number; type: string; }; items: ({ ID: number; quantity: number; weight: number; type: string; } | { quantity: number; weight: number; type: string; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; fallback: { type: string; quantity: { max: number; min: number; }; }; items: { ID: number; quantity: number; weight: number; type: string; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; fallback: { ID: number; quantity: number; type: string; }; items: ({ weight: number; type: string; quantity: unknown /* too deep */; } | { ID: number; quantity: number; weight: number; type: string; })[]; }; metadata: {}; })[];
	key: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { levels: number; flavorText: string; name: string; }; metadata: { subType: number; v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { levels: number; quest: number; flavorText: string; name: string; }; metadata: { subType: number; v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { levels: number; flavorText: string; name: string; quest: null; }; metadata: { subType: number; v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { levels: number; price: number; flavorText: string; name: string; quest: null; }; metadata: { subType: number; vIcon: number; }; })[];
	mathTownDecor: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { element: number; description: string; name: string; tag: string; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { element: number; description: string; name: string; }; metadata: { v: number; vIcon: number; type: string; }; })[];
	mathTownFrame: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { element: number; description: string; name: string; tag: string; decorPositions: { x: number; y: number; }[]; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { element: number; description: string; name: string; decorPositions: { x: number; y: number; }[]; }; metadata: { v: number; vIcon: number; type: string; }; })[];
	mathTownInterior: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { element: number; description: string; flavorText: string; name: string; tag: string; occupantLevels: number[]; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { element: number; description: string; name: string; tag: string; occupantLevels: number[]; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { element: number; description: string; name: string; occupantLevels: number[]; }; metadata: { v: number; vIcon: number; type: string; }; })[];
	mount: { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: never[]; }; metadata: { vIcon: number; type: string; assets: { above: { v: number; x: number; y: number; type: string; }; below: { v: number; x: number; y: number; type: string; }; }; }; }[];
	name: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { type: number; name: string; value: string; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { deprecated: boolean; type: number; name: string; value: string; }; metadata: {}; })[];
	nickname: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { value: string; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; value: string; }; metadata: {}; })[];
	orb: { assetID: number; gender: number; ID: number; name: string; type: string; data: { rarity: number; tier: number; flavorText: string; name: string; affixIDs: number[]; }; metadata: { vIcon: number; }; }[];
	outfit: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; effects: number[]; }; metadata: { vIcon: number; type: string; assets: { female: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; effects: never[]; }; metadata: { vIcon: number; type: string; assets: { female: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; effects: number[]; }; metadata: { vIcon: number; type: string; assets: { female: { v: number; type: string; leftArm: unknown /* too deep */; leg: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; leg: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { asset_id: number; drop: number; id: number; member: number; price: number; rarity: number; create_date: string; flavorText: string; name: string; update_date: string; effects: number[]; }; metadata: { vIcon: number; type: string; assets: { female: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; effects: number[]; }; metadata: { vIcon: number; type: string; assets: { female: { v: number; type: string; assetVersions: unknown /* too deep */; iconVersions: unknown /* too deep */; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; assetVersions: unknown /* too deep */; iconVersions: unknown /* too deep */; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[][]; }; metadata: { vIcon: number; type: string; assets: { female: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { vIcon: number; type: string; assets: { female: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { v: number; vIcon: number; type: string; assets: { female: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: string[]; }; metadata: { vIcon: number; type: string; assets: { female: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { vIcon: number; type: string; assets: { female: { noCache: boolean; v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { vIcon: number; type: string; assets: { female: { noCache: boolean; v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { noCache: boolean; v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; "en-us": string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { vIcon: number; type: string; assets: { female: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; male: { v: number; type: string; leftArm: unknown /* too deep */; legs: unknown /* too deep */; rightArm: unknown /* too deep */; shirt: unknown /* too deep */; }; }; }; })[];
	particleEffect: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; emitter: { frequency: number; repeat: number; }; particle: { lifespan: number; frame: string; image: string; vx: { max: number; min: number; }; vy: { max: number; min: number; }; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; emitter: { repeat: number; frequency: { max: number; min: number; }; }; particle: { frame: string; image: string; lifespan: { max: number; min: number; }; scale: { control: unknown /* too deep */; value: unknown /* too deep */; }; vx: { max: number; min: number; }; vy: { max: number; min: number; }; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; emitter: { repeat: number; burstFrequency: { max: number; min: number; }; frequency: { max: number; min: number; }; }; particle: { lifespan: number; frame: string; image: string; alpha: { value: number; control: unknown /* too deep */; }; rotation: { delta: unknown /* too deep */; initial: unknown /* too deep */; }; scale: { value: number; control: unknown /* too deep */; }; vx: { max: number; min: number; }; vy: { max: number; min: number; }; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; emitter: { frequency: number; repeat: number; }; particle: { image: string; animations: { clouds: unknown /* too deep */; }; lifespan: { max: number; min: number; }; vy: { max: number; min: number; }; }; }; metadata: {}; })[];
	pet: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; price: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; effects: never[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { v: number; vIcon: number; type: string; assets: { default: { battleScale: number; h: number; pivotX: number; v: number; w: number; x: number; type: string; }; reduced: { h: number; pivotX: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; h: number; v: number; w: number; x: number; type: string; }; reduced: { h: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; price: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: { a: number; lvl: number; }[]; effects: never[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { v: number; vIcon: number; type: string; assets: { default: { battleScale: number; h: number; pivotX: number; v: number; w: number; x: number; type: string; }; reduced: { h: number; pivotX: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; price: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; effects: never[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { v: number; vIcon: number; type: string; assets: { default: { battleScale: number; h: number; pivotX: number; v: number; w: number; x: number; type: string; }; reduced: { h: number; pivotX: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; h: number; v: number; w: number; x: number; type: string; }; reduced: { h: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; h: number; v: number; w: number; x: number; type: string; }; reduced: { h: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { special: boolean; ordinal: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; reduced: { h: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; spine: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; hitbox: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; price: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; effects: never[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: ({ a: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; hitbox: unknown /* too deep */; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: ({ petID: number; weight: number; } | { spell: number; })[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: ({ a: number; lvl: number; } | { e: number; lvl: number; } | { evolveID: number; lvl: number; })[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { unique: boolean; epicSpell: number; ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; unlockFollow: number; adText: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; h: number; v: number; w: number; x: number; type: string; }; reduced: { h: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { unique: boolean; epicSpell: number; ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; unlockFollow: number; adText: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; h: number; v: number; w: number; x: number; type: string; hitbox: unknown /* too deep */; }; reduced: { h: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { unique: boolean; epicSpell: number; ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; unlockFollow: number; adText: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; effects: number[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { reduced: { h: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { unique: boolean; epicSpell: number; ordinal: number; price: number; R: number; statHealth: number; statPower: number; unlockFollow: number; adText: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; effects: never[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { v: number; vIcon: number; type: string; assets: { reduced: { h: number; pivotX: number; v: number; w: number; x: number; type: string; hitbox: unknown /* too deep */; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { unique: boolean; epicSpell: number; ordinal: number; price: number; R: number; rarity: number; statHealth: number; statPower: number; unlockFollow: number; adText: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; effects: number[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { reduced: { h: number; pivotX: number; v: number; w: number; x: number; type: string; }; small: { v: number; x: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { flip: boolean; battleScale: number; ID: number; type: string; }; }; uiConfig: { loop: boolean; anchorX: number; anchorY: number; relativeX: number; relativeY: number; animation: string; name: string; spineKey: string; type: string; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { a: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; uiConfig: { loop: boolean; anchorX: number; anchorY: number; relativeX: number; relativeY: number; animation: string; name: string; spineKey: string; type: string; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { evolveID: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; uiConfig: { loop: boolean; anchorX: number; anchorY: number; relativeX: number; relativeY: number; animation: string; name: string; spineKey: string; type: string; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: { evolveID: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: never[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; element: string; flavorText: string; growth: string; life: string; name: string; power: string; bench: { petID: number; weight: number; }[]; curve: { evolveID: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: { evolveID: number; lvl: number; }[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { ordinal: number; R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: never[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { R: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; curve: never[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { unique: boolean; ordinal: number; price: number; rarity: number; statHealth: number; statPower: number; assetType: string; element: string; flavorText: string; growth: string; life: string; name: string; power: string; cost: { ID: number; N: number; type: string; }[]; curve: never[]; foreignSpellPools: number[][]; nativeSpells: { spell: number; }[]; }; metadata: { vIcon: number; type: string; assets: { default: { battleScale: number; ID: number; type: string; }; }; }; })[];
	prefab: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { guid: string; name: string; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; guid: string; name: string; children: unknown /* too deep */[]; components: never[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; nameEditMode: boolean; guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { nameEditMode: boolean; guid: string; name: string; children: never[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { template: number; guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; template: number; guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { guid: string; name: string; children: never[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { active: boolean; collapsed: boolean; nameEditMode: boolean; guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; nameEditMode: boolean; guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; metadata: {}; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; guid: string; name: string; children: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { active: boolean; collapsed: boolean; nameEditMode: boolean; guid: string; layer: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { "en-us": string; name: string; prefab: { collapsed: boolean; nameEditMode: boolean; guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { "en-us": string; name: string; prefab: { guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { template: number; guid: string; name: string; tuid: string; children: never[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { prefab: { active: boolean; collapsed: boolean; nameEditMode: boolean; guid: string; layer: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { active: boolean; nameEditMode: boolean; guid: string; layer: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { guid: string; layer: string; name: string; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { prefab: { collapsed: boolean; guid: string; layer: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { active: boolean; nameEditMode: boolean; guid: string; layer: string; name: string; children: never[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { active: boolean; collapsed: boolean; nameEditMode: boolean; template: number; guid: string; name: string; tuid: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; nameEditMode: boolean; template: number; guid: string; name: string; tuid: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { active: boolean; nameEditMode: boolean; guid: string; name: string; children: never[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; guid: string; layer: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { active: boolean; collapsed: boolean; nameEditMode: boolean; guid: string; name: string; children: never[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { active: boolean; collapsed: boolean; nameEditMode: boolean; guid: string; layer: string; name: string; children: never[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; nameEditMode: boolean; guid: string; name: string; children: never[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { collapsed: boolean; nameEditMode: boolean; guid: string; layer: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { active: boolean; collapsed: boolean; guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { prefab: { active: boolean; collapsed: boolean; nameEditMode: boolean; guid: string; name: string; children: unknown /* too deep */[]; components: unknown /* too deep */[]; }; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; prefab: { guid: string; components: unknown /* too deep */[]; }; }; metadata: {}; })[];
	prizeWheel: ({ assetID: number; gender: number; ID: number; name: string; type: string; metadata: null; data: { itemDistanceScale: number; askSpinDialogue: string; atlas: string; eventType: string; outOfSpinsDialogue: string; spinAgainDialogue: string; spinningDialogue: string; ticketDialogue: string; wheelPointer: string; wheelSprite: string; wheelTop: string; itemPools: unknown /* too deep */[][]; slots: { weight: number; itemPools: unknown /* too deep */; }[]; wheelPointerOffset: { x: number; y: number; }; wheelTopOffset: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; metadata: null; data: { itemDistanceScale: number; askSpinDialogue: string; atlas: string; eventType: string; outOfSpinsDialogue: string; spinAgainDialogue: string; spinningDialogue: string; wheelPointer: string; wheelSprite: string; wheelTop: string; itemPools: unknown /* too deep */[][]; slots: { weight: number; itemPools: unknown /* too deep */; }[]; wheelPointerOffset: { x: number; y: number; }; wheelTopOffset: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; metadata: null; data: { askSpinDialogue: string; atlas: string; eventType: string; outOfSpinsDialogue: string; spinAgainDialogue: string; spinningDialogue: string; wheelPointer: string; wheelSprite: string; wheelTop: string; itemPools: unknown /* too deep */[][]; slots: { weight: number; itemPools: unknown /* too deep */; }[]; wheelTopOffset: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; metadata: null; data: { declineSpinDialogueID: number; firstSpinDialogueID: number; itemDistanceScale: number; maxedItemPrizeSubstitute: number; outOfSpinsDialogueID: number; prizeReceivedDialogueID: number; spinAgainDialogueID: number; spinDialogueID: number; spinningDialogueID: number; atlas: string; eventType: string; name: string; wheelPointer: string; wheelSprite: string; wheelTop: string; firstSpinBreadcrumb: { breadcrumbName: string; featureName: string; }; itemPools: unknown /* too deep */[][]; slots: { weight: number; itemPools: unknown /* too deep */; }[]; wheelPointerOffset: { x: number; y: number; }; wheelTopOffset: { x: number; y: number; }; }; })[];
	relic: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; effects: number[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { member: number; price: number; rarity: number; flavorText: string; name: string; effects: never[]; }; metadata: { vIcon: number; }; })[];
	sfx: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { cast: { d: number; s: number; }; "critical-hit": { d: number; s: number; }; "level-up": { d: number; s: number; }; miss: { d: number; s: number; }; "normal-hit": { d: number; s: number; }; run: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { cooking: { d: number; s: number; }; plop: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { eating: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { aw: { d: number; s: number; }; bell: { d: number; s: number; }; damage: { d: number; s: number; }; go: { d: number; s: number; }; ready: { d: number; s: number; }; victory: { d: number; s: number; }; yay: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { bell: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { door: { d: number; s: number; }; knock: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { window: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { door: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { victory: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { elevator: { d: number; s: number; }; "elevator-doors": { d: number; s: number; }; machines: { d: number; s: number; }; wind: { d: number; s: number; }; window: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { blop: { d: number; s: number; }; dig: { d: number; s: number; }; heart: { d: number; s: number; }; pop: { d: number; s: number; }; whoosh: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { item: { d: number; s: number; }; monster: { d: number; s: number; }; tick: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { "boss-monster": { d: number; s: number; }; camera: { d: number; s: number; }; "clear-ink": { d: number; s: number; }; squeak: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { cloud: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { launch: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { hit: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { click: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { close: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { open: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { chestOpen: { d: number; s: number; }; chestOpenMember: { d: number; s: number; }; highlight: { d: number; s: number; }; levelUp: { d: number; s: number; }; popUpDisplay: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { open: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { close: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { disappear: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { rumble: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { blast: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { appear: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { pop: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { break: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { equip: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { purchase: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { splash: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { chooseState: { d: number; s: number; }; classCodeAskParent: { d: number; s: number; }; classCodeAskTeacher: { d: number; s: number; }; classCodeSubmitError: { d: number; s: number; }; complete: { d: number; s: number; }; forgotPassword: { d: number; s: number; }; homeOrSchool: { d: number; s: number; }; oops: { d: number; s: number; }; password: { d: number; s: number; }; whatClass: { d: number; s: number; }; whatGrade: { d: number; s: number; }; whatName: { d: number; s: number; }; whatYear: { d: number; s: number; }; whereYouLive: { d: number; s: number; }; whichOne: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { landaFloatling: { d: number; s: number; }; launchaFloatling: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { clearaShroud: { d: number; s: number; }; completeaFloor: { d: number; s: number; }; defeataStubbornShadow: { d: number; s: number; }; droppingaBlock: { d: number; s: number; }; droppingaStubbornShadow: { d: number; s: number; }; StubbornShadowDefend: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { hit: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { roar: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { break: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { poof: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; clips: { destroy: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { full: { d: number; s: number; }; short: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { stop: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { "add-pet": { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { "moving-pet": { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { "book-close": { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { "book-open": { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { "book-pagination": { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { "open-pet-submenu": { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { "button-disabled": { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { "paper-tab": { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { action: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; clips: { play: { d: number; s: number; }; }; }; metadata: { assets: { default: { v: number; }; }; }; })[];
	singleImage: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { iconAtlas: string; assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { v: number; assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { iconAtlas: number; assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { petID: number; assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; }; metadata: { iconAtlas: string; assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { "en-us": string; filename: string; name: string; }; metadata: { assets: { default: { v: number; }; }; }; })[];
	skinColor: { assetID: number; gender: number; ID: number; name: string; type: string; data: { price: number; flavorText: string; name: string; colors: number[][]; }; metadata: { faceColor: number; v: number; vIcon: number; type: string; }; }[];
	spell: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; price: number; animation: string; element: string; name: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { heal: boolean; damage: number; price: number; animation: string; element: string; name: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; epicId: number; price: number; animation: string; baseAttack: string; element: string; name: string; type: string; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; price: number; animation: string; baseAttack: string; element: string; name: string; epicId: null; type: null; statusEffects: number[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; price: number; animation: string; baseAttack: string; element: string; name: string; epicId: null; type: null; statusEffects: never[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; epicId: number; price: number; animation: string; baseAttack: string; element: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; epicId: number; price: number; animation: string; baseAttack: string; element: string; name: string; type: string; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; price: number; animation: string; baseAttack: string; element: string; name: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; nextTierID: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; type: string; epicId: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; nextTierID: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; charToAnimationDelay: null; charToAnimationLength: null; createLocation: { createOffsetX: number; createOffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetY: number; createOffsetX: null; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; nextTierID: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; nextTierID: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; nextTierID: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; createx: number; createy: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impactLocation: { impactx: number; impacty: number; offsety: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; nextTierID: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetY: number; createOffsetX: null; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetY: number; createOffsetX: null; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { baseAttack: number; damage: number; energyCost: number; price: number; tier: number; animation: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impactLocation: { impactx: number; impacty: number; offsetx: number; offsety: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; nextTierID: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: null; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: null; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; nextTierID: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impacty: number; impactx: null; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impacty: number; impactx: null; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; animation: string; baseAttack: string; damageType: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; fullTeamAttack: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; createBeamDelay: string; endEasing: string; travelEasing: string; castingAnimation: { ID: number; animation: string; type: string; offset: unknown /* too deep */; }; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; animation: string; baseAttack: string; element: string; name: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; endingMask: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; animation: string; baseAttack: string; element: string; name: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; castingAnimation: { ID: number; animation: string; type: string; offset: unknown /* too deep */; }; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; }; }; assets: string[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { damage: number; energyCost: number; price: number; tier: number; animation: string; baseAttack: string; element: string; name: string; targetType: string; epicId: null; type: null; cost: { ID: number; N: number; type: string; }[]; statusEffects: never[]; }; metadata: { vIcon: number; animationData: { createRotates: boolean; impactRotates: boolean; screenDim: boolean; travelRotates: boolean; travelStraight: boolean; charToAnimationDelay: number; charToAnimationLength: number; createBeamDelay: number; endDuration: number; impact2Delay: number; sustainDuration: number; travelDuration: number; animationType: string; charFromAnimation: string; charToAnimation: string; endEasing: string; travelEasing: string; createLocation: { createOffsetX: number; createOffsetY: number; }; impact2Offset: { impact2OffsetX: number; impact2OffsetY: number; }; impactLocation: { impactx: number; impacty: number; offsetx: number; offsety: number; }; }; assets: string[]; }; })[];
	spellRelic: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; rarity: number; spellID: number; flavorText: string; name: string; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; rarity: number; spellID: number; flavorText: string; name: string; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; levelLock: number; rarity: number; spellID: number; flavorText: string; name: string; }; metadata: { v: number; vIcon: number; type: string; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; levelLock: number; rarity: number; spellID: number; flavorText: string; name: string; }; metadata: { vIcon: number; type: string; }; })[];
	spine: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; }; metadata: { assets: { default: { v: number; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; }; metadata: { type: string; assets: { default: { v: number; type: string; }; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; }; metadata: { assets: { default: { v: number; hitbox: unknown /* too deep */; }; }; }; })[];
	streamedMap: { assetID: number; gender: number; ID: number; name: string; type: string; data: { filename: string; name: string; }; metadata: { assets: { default: { v: number; }; }; }; }[];
	titan: { assetID: number; gender: number; ID: number; name: string; type: string; data: { difficulty: number; maxHealth: number; element: string; name: string; spine: string; zone: string; rewards: { rank: number; threshold: number; mailKey: string; attachments: unknown /* too deep */; mapping: unknown /* too deep */; }[]; spellList: number[]; }; metadata: { type: string; assets: { default: { v: number; type: string; hitbox: unknown /* too deep */; }; }; }; }[];
	ui: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; relativeHeight: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: ({ anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; } | { anchorX: number; anchorY: number; atlasID: number; relativeX: number; relativeY: number; frameName: string; name: string; type: string; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeWidth: number; relativeX: number; relativeY: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: ({ anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; } | { anchorX: number; anchorY: number; atlasID: number; relativeWidth: number; relativeX: number; relativeY: number; baseFrameName: string; name: string; textKey: string; type: string; })[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: ({ height: number; width: number; name: string; type: string; children: unknown /* too deep */; } | { relativeHeight: number; relativeWidth: number; name: string; type: string; children: unknown /* too deep */; } | { visible: boolean; anchorX: number; anchorY: number; height: number; width: number; name: string; type: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { anchorX: number; anchorY: number; height: number; width: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; frameName: string; name: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; frameName: string; name: string; type: string; children: unknown /* too deep */; }[]; templates: { anchorX: number; anchorY: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; relativeHeight: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: ({ anchorX: number; anchorY: number; relativeHeight: number; width: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; } | { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; width: number; y: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { height: number; width: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { height: number; width: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { anchorX: number; anchorY: number; height: number; width: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; relativeHeight: number; relativeWidth: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; }[]; templates: { height: number; width: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { anchorX: number; anchorY: number; atlasID: number; relativeX: number; relativeY: number; frameName: string; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { height: number; width: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { height: number; width: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { relativeHeight: number; relativeWidth: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { height: number; width: number; name: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: ({ isInteractive: boolean; isVertical: boolean; showHead: boolean; anchorX: number; anchorY: number; atlasID: number; relativeX: number; relativeY: number; width: number; activeTrackBaseFrameName: string; inactiveTrackBaseFrameName: string; name: string; type: string; thumbAnchor: unknown /* too deep */; } | { visible: boolean; anchorX: number; anchorY: number; relativeX: number; relativeY: number; name: string; spineKey: string; type: string; })[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; height: number; relativeX: number; relativeY: number; width: number; name: string; type: string; children: unknown /* too deep */; }[]; templates: ({ anchorX: number; anchorY: number; height: number; relativeWidth: number; relativeX: number; name: string; type: string; children: unknown /* too deep */; layoutConfig: unknown /* too deep */; } | { anchorX: number; anchorY: number; height: number; relativeX: number; relativeY: number; width: number; name: string; type: string; children: unknown /* too deep */; } | { anchorX: number; anchorY: number; height: number; width: number; name: string; type: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { visible: boolean; relativeHeight: number; relativeWidth: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: ({ anchorX: number; anchorY: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; name: string; type: string; children: unknown /* too deep */; layoutConfig: unknown /* too deep */; } | { anchorX: number; anchorY: number; height: number; relativeWidth: number; relativeX: number; relativeY: number; name: string; type: string; children: unknown /* too deep */; layoutConfig: unknown /* too deep */; } | { relativeHeight: number; relativeWidth: number; name: string; type: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: ({ anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; } | { anchorX: number; anchorY: number; relativeX: number; relativeY: number; name: string; type: string; })[]; templates: ({ anchorX: number; anchorY: number; atlasID: number; relativeX: number; relativeY: number; frameName: string; name: string; type: string; } | { anchorX: number; anchorY: number; relativeHeight: number; relativeWidth: number; atlasName: string; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: ({ visible: boolean; anchorX: number; anchorY: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; name: string; type: string; children: unknown /* too deep */; } | { visible: boolean; anchorX: number; anchorY: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; x: number; name: string; type: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; relativeX: number; relativeY: number; name: string; type: string; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { anchorX: number; anchorY: number; height: number; width: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; width: number; y: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: ({ anchorX: number; anchorY: number; height: number; width: number; x: number; y: number; atlasID: string; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; } | { anchorX: number; anchorY: number; atlasID: number; x: number; y: number; frameName: string; type: string; })[]; templates: never[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; frameName: string; name: string; type: string; children: unknown /* too deep */; }[]; templates: { height: number; width: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: ({ anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; width: number; y: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; } | { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: { height: number; width: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; width: number; x: number; y: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: ({ anchorX: number; anchorY: number; relativeHeight: number; relativeWidth: number; relativeX: number; relativeY: number; style: number; boundsAlignH: string; boundsAlignV: string; name: string; text: string; type: string; } | { toggle: boolean; anchorX: number; anchorY: number; height: number; hoverLiftDistance: number; relativeX: number; relativeY: number; width: number; buttonTextName: string; downStateName: string; name: string; type: string; upStateName: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { isThreeSlice: boolean; anchorX: number; anchorY: number; atlasID: number; width: number; baseFrameName: string; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; }[]; templates: ({ visible: boolean; relativeHeight: number; relativeWidth: number; name: string; type: string; children: unknown /* too deep */; } | { visible: boolean; height: number; width: number; name: string; type: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { anchorX: number; anchorY: number; atlasID: number; defaultToggleState: number; height: number; width: number; x: number; y: number; frameNameOff: string; frameNameOn: string; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: ({ anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; width: number; y: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; } | { anchorX: number; anchorY: number; atlasID: number; height: number; relativeX: number; relativeY: number; width: number; baseFrameName: string; name: string; sliceType: string; type: string; children: unknown /* too deep */; } | { visible: boolean; anchorX: number; anchorY: number; height: number; width: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; })[]; templates: ({ visible: boolean; relativeHeight: number; relativeWidth: number; name: string; type: string; children: unknown /* too deep */; } | { anchorX: number; relativeHeight: number; relativeWidth: number; x: number; name: string; type: string; children: unknown /* too deep */; })[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { height: number; width: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { elements: { height: number; width: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { data: { name: string; elements: unknown /* too deep */[]; }; metadata: {}; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { height: number; width: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { name: string; elements: { name: string; elements: unknown /* too deep */; }[]; }; metadata: {}; } | { ID: number; type: string; data: { name: string; elements: { height: number; width: number; x: number; y: number; name: string; type: string; children: unknown /* too deep */; }[]; }; metadata: {}; })[];
	weapon: ({ assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; member: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; member: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; x: number; y: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; member: number; memberAd: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; member: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; "anchor ": { x: number; y: number; }; assetVersions: { id: string; }[]; iconVersions: { id: string; }[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; member: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; assetVersions: { id: string; }[]; iconVersions: { id: string; }[]; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; flavorText: string; name: string; effects: never[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; member: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; member: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { noCache: boolean; angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { noCache: boolean; angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; member: number; price: number; rarity: number; spellID: number; "en-us": string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { noCache: boolean; angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; lockLevel: number; member: number; price: number; rarity: number; spellID: number; "en-us": string; flavorText: string; name: string; cost: { ID: number; N: number; type: string; }[]; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; } | { assetID: number; gender: number; ID: number; name: string; type: string; data: { drop: number; member: number; price: number; rarity: number; spellID: number; flavorText: string; name: string; effects: number[]; }; metadata: { angle: number; size: number; v: number; vIcon: number; type: string; anchor: { x: number; y: number; }; }; })[];
} 